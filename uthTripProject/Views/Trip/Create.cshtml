@model UthTripProject.Models.TripViewModel
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <head>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    </head>

    <body>
        <section id="nav-bar">
            <nav class="navbar navbar-expand-lg navbar-light">
                <a class="navbar-brand" href="#">uthTRIP</a>

                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mr-auto">
                        <li class="nav-item" style="float:right">
                            <a class="fa fa-user fa-lg" aria-hidden="true"> @Session["Username"]</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/Home/StartPage">
                                Головна
                            </a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="/Home/MyTrips" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Мої подорожі
                            </a>
                            <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                                <a class="dropdown-item" href="/Home/MyTrips">Обрані</a>
                                <a class="dropdown-item" href="/Home/Created">Створені</a>
                            </div>
                            
                        </li>

                        <li class="nav-item">
                            <a class="nav-link active" href="/Trip/Create">
                                Створити
                            </a>
                          <span class="sr-only">(current)</span>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="../User/Logout">
                                Вийти
                            </a>
                        </li>
                    </ul>
                </div>
            </nav>
        </section>

        <div class="container" style=" margin-top: 45px">
            <canvas class="background"></canvas>

            <div class="card bg-light " style="width: 700px">
                <article class="card-body">@* mx-auto" style="max-width: 600px;">*@
                    <h4 class="card-title mt-3 text-center">Створити подорож</h4>
                    <form>
                        <div class="form-group">
                            <div>
                                <label class="label-warning">@ViewBag.DuplicateMessage</label>
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Trip_Title, htmlAttributes: new { @class = " input-group" })
                            <div class="input-group-prepend justify-content-center">
                                @Html.EditorFor(model => model.Trip_Title, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                @Html.ValidationMessageFor(model => model.Trip_Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = " input-group" })
                            <div class="input-group-prepend justify-content-center">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @type = "textarea" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "input-group" })
                            <div class="input-group-prepend justify-content-center">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @step = "1" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div> 
                        
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Number_Of_People, htmlAttributes: new { @class = "input-group", @type = "number", @min = "0", @step = "1" })
                            <div class="input-group-prepend justify-content-center">
                                @Html.EditorFor(model => model.Number_Of_People, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Number_Of_People, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "input-group" })
                            <div class="input-group-prepend justify-content-center">
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>
                                               
               @*     </form>
                </article>
            </div>

        </div>
        <div class="container col-md-6">

            <div class="card bg-light ">
                <article class="card-body mx-auto" style="max-width: 600px;">
                    <form>*@

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "input-group" })
                            <div class="input-group-prepend justify-content-center">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Start_date, htmlAttributes: new { @class = "input-group" })
                            <div class="input-group-prepend justify-content-center">
                                @Html.EditorFor(model => model.Start_date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.Start_date, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.End_date, htmlAttributes: new { @class = "input-group" })
                            <div class="input-group-prepend justify-content-center">
                                @Html.EditorFor(model => model.End_date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.End_date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                       
                        @*<div class="form-group input-group">
                                @Html.LabelFor(model => model.Is_Abroad, htmlAttributes: new { @class = "input-group" })
                                <div class="input-group-prepend">
                                    @Html.EditorFor(model => model.Is_Abroad, new { htmlAttributes = new { @class = "form-control", @type = "checkbox" } })
                                    @Html.ValidationMessageFor(model => model.Is_Abroad, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                      

                        <div class="form-group col-md-6">
                            <button type="submit" class="btn btn-primary btn-block" style="width:200px; position: relative; left: 70%"> Створити </button>
                        </div>
                        <div class="form-group">
                            <div>
                                <label class="label-success">@ViewBag.SuccessMessage</label>
                            </div>
                        </div>
                    </form>
                </article>
            </div>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/particlesjs/2.2.2/particles.min.js"></script>

        </div>

    </body>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/background")
    @Scripts.Render("~/bundles/bootstrap")
    @Styles.Render("~/Content/createTrip.css")
    @Styles.Render("~/Content/css")
}
